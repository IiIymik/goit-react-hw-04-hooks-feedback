{"version":3,"sources":["components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["Container","styled","div","Title","h2","Notification","message","prototype","massage","PropTypes","string","isRequired","Button","button","h1","Section","title","children","node","FeedbackOptions","options","onLeaveFeedback","map","nameBtn","index","name","type","onClick","List","ul","Item","li","Statistics","props","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","visible","setVisible","feedbackBtnEl","Object","keys","totalSum","positiveFeed","Math","round","e","target","state","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAYC,IAAOC,IAAV,sEAITC,EAAQF,IAAOG,GAAV,0C,OCFlB,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,cAACN,EAAD,UACI,cAACG,EAAD,UAAQG,MAKLD,I,IAAAA,IAEfA,EAAaE,UAAY,CACrBC,QAASC,IAAUC,OAAOC,YCbvB,I,IAAMC,EAASX,IAAOY,OAAV,+PAeNb,EAAYC,IAAOC,IAAV,kHCfTC,EAAQF,IAAOa,GAAV,0CAILd,EAAYC,IAAOC,IAAV,8CCFtB,SAASa,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrB,OAAO,eAAC,EAAD,WACC,cAAC,EAAD,UAAQD,IACPC,KAMEF,QAEfA,EAAQR,UAAY,CAChBS,MAAOP,IAAUC,OAAOC,WACxBM,SAAUR,IAAUS,MCFTC,I,IAAAA,EAVf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAAUC,EAAkB,EAAlBA,gBACjC,OAAO,cAAC,EAAD,CAASL,MAAM,wBAAf,SACH,cAAC,EAAD,UACKI,EAAQE,KAAI,SAACC,EAASC,GAAV,OACT,cAACZ,EAAD,CAAoBa,KAAMF,EAASG,KAAK,SAASC,QAASN,EAA1D,SAA4EE,GAA/DC,WCPhBI,EAAO3B,IAAO4B,GAAV,kEAKJC,EAAO7B,IAAO8B,GAAV,+GCWFC,I,EAAAA,EAbf,SAAoBC,GAChB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OAAO,cAAC,EAAD,CAAStB,MAAM,aAAf,SACH,eAACY,EAAD,WACY,eAACE,EAAD,oBAAaI,KACb,eAACJ,EAAD,uBAAgBK,KAChB,eAACL,EAAD,mBAAYM,KACZ,eAACN,EAAD,qBAAeO,KACf,eAACP,EAAD,iCAA2BQ,EAA3B,aCXPtC,EAAYC,IAAOC,IAAV,kHCOP,SAASqC,IACpB,MAAwBC,mBAHP,GAGjB,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAJb,GAIjB,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBALL,GAKjB,mBAAOJ,EAAP,KAAYO,EAAZ,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACMC,EAAgBC,OAAOC,KAAK,CAAEd,OAAMC,UAASC,QAC7Ca,EAAWf,EAAOC,EAAUC,EAC5Bc,EAAeC,KAAKC,MAAMlB,EAAOe,EAAW,KAmBlD,OACI,eAAC,EAAD,WACI,cAAC,EAAD,CAAiB5B,gBAnBG,SAACgC,GAEzB,OADiBA,EAAEC,OAAX7B,MAEJ,IAAK,OACDgB,GAAQ,SAAAc,GAAK,OAAIA,EAAQ,KACzB,MACJ,IAAK,UACDb,GAAW,SAAAa,GAAK,OAAIA,EAAQ,KAC5B,MACJ,IAAK,MACDZ,GAAO,SAAAY,GAAK,OAAIA,EAAQ,KACxB,MACJ,QAASC,QAAQC,IAAI,kBAEzBZ,GAAW,IAKgDzB,QAAS0B,KAC9DF,GAAW,cAAC,EAAD,CAActC,QAAQ,sBAClCsC,GAAW,cAAC,EAAD,CAAYV,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOY,EAAUX,mBAAoBY,OClCjHQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrB,EAAD,MAEFsB,SAASC,eAAe,W","file":"static/js/main.2cce22d8.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: center;\n`;\nexport const Title = styled.h2`\ncolor: #fff;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Container, Title} from './Notification.styled.js'\n\nfunction Notification({message}) {\n    return (\n        <Container>\n            <Title>{message}</Title>\n        </Container>\n    )\n}\n\nexport default Notification\n\nNotification.prototype = {\n    massage: PropTypes.string.isRequired,\n}","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\ncolor: #fff;\nbackground-color: transparent;\nborder: 2px solid;\nborder-radius: 30%;\noutline: none;\ntext-transform: capitalize ;\n&:not(:last-child){\n    margin-right: 10px;\n}\n&:hover{\n    background-color:#f2f2f2 ;\n}\n`;\n\nexport const Container = styled.div`\nmargin-top: 20px;\ndisplay: flex;\njustify-content: center;\n\npadding-bottom: 20px;\n`;","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\ncolor: #fff;\n`;\n\nexport const Container = styled.div`\ndisplay: inline;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Container } from './Section.styled.js';\n\nfunction Section({title, children}) {\n    return <Container>\n            <Title>{title}</Title>\n            {children}\n        </Container>\n           \n    \n}\n\nexport default Section\n\nSection.prototype = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node,\n}","import React from 'react';\n\nimport { Button, Container } from './FeedbackOptions.styled.js';\nimport Section from '../Section/Section.jsx';\n\nfunction FeedbackOptions({ options , onLeaveFeedback}) {\n    return <Section title=\"Please leave feedback\">\n        <Container>\n            {options.map((nameBtn, index) => (\n                <Button key={index} name={nameBtn} type='button' onClick={onLeaveFeedback}>{nameBtn}</Button>\n            ))}\n        </Container>\n    </Section>\n}\n\nexport default FeedbackOptions\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\nlist-style: none;\nmargin-top: 10px;\n`;\n\nexport const Item = styled.li`\nfont-weight: 700;\ncolor: #fff;\n&:not(:last-child){\n    margin-bottom: 10px;\n}\n`;","import React from 'react';\nimport { List,Item} from './Statistics.styled.js'\nimport Section from '../Section/Section.jsx';\n\n\nfunction Statistics(props) {\n    const { good, neutral, bad, total, positivePercentage } = props;\n    return <Section title=\"Statistics\">\n        <List>\n                    <Item>Good: {good}</Item>\n                    <Item>Neutral: {neutral}</Item>\n                    <Item>Bad: {bad}</Item>\n                    <Item >Total: {total}</Item>\n                    <Item >Positive feedback: {positivePercentage}%</Item>\n        </List>\n    </Section>\n}\n\nexport default Statistics\n\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\ndisplay:flex;\nflex-direction:column;\nalign-items: center;\njustify-content:center;\n`;","import {useState} from 'react';\nimport Notification from '../Notification/Notification';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport { Container } from './App.styled.js';\n\n\nconst initialValue = 0;\n\nexport default function App() {\n    const [good, setGood] = useState(initialValue);\n    const [neutral, setNeutral] = useState(initialValue);\n    const [bad, setBad] = useState(initialValue); \n    const [visible, setVisible] = useState(false);\n    const feedbackBtnEl = Object.keys({ good, neutral, bad });\n    const totalSum = good + neutral + bad;\n    const positiveFeed = Math.round(good / totalSum * 100)\n\n    const incrementStatistics = (e) => {\n        const { name } = e.target;\n        switch (name) {\n            case 'good':\n                setGood(state => state + 1)\n                break;\n            case 'neutral':\n                setNeutral(state => state + 1)\n                break;\n            case 'bad':\n                setBad(state => state + 1)\n                break;\n            default: console.log(\"Need to reload\");\n        }\n        setVisible(true)\n    }\n\n    return (\n        <Container>\n            <FeedbackOptions onLeaveFeedback={incrementStatistics} options={feedbackBtnEl} />\n            {!visible && <Notification message=\"No feedback given\"/> }\n            {visible && <Statistics good={good} neutral={neutral} bad={bad} total={totalSum} positivePercentage={positiveFeed}/>}\n        </Container>\n    )\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}